@startuml
!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Component.puml

LAYOUT_WITH_LEGEND()

Container(spa, "Single Page Application", "javascript and react", "Provides all the internet banking functionality to customers via their web browser.")
Container(rdb1, "User Database", "Relational Database Schema", "Stores user registration information, hashed authentication credentials, access logs, etc.")
Container(edb, "Films Search Database", "Elasticsearch", "Stores film, genre and person informations for fast full text search")
Container(rdb2, "Files Database", "Relational Database Schema", "Stores files metadata")
Container(rdb3, "Film Database", "Relational Database Schema", "Stores films, genres, persons information")
Container(s3, "Minio File Storage", "S3 Storage", "Stores files")
Container(redis, "Cache Storage Container", "Redis, one per service", "Stores cached data")
Container(proxy, "Proxy and Load balancer", "NGINX", "Navigate request to concrete service")
Container_Boundary(api, "API Application") {
    Component(auth, "Auth Service", "fastapi", "Allows users to sign in to the film system")
    Component(films, "Film Service", "fastapi", "Provides films, genre, users data to user")
    Component(files, "File Service", "fastapi", "Provides access to film storage")
    Component(django, "Admin Service", "django, drf", "Provides admin functionality")
    Component(etl, "Etl proccess", "Python", "Extract load transform process for films" )
    Rel(films, auth, "Verify token")
    Rel(files, auth, "Verify token")
    Rel(django, auth, "Fetches roles from")
    Rel(django, files, "Stores file to")

}
Rel(proxy, auth, "Redirect to")
Rel(proxy, files, "Redirect to")
Rel(proxy, django, "Redirect to")
Rel(proxy, films, "Redirect to")
Rel(etl, rdb3, "Fetch data from")
Rel(etl, edb, "Write data to")
Rel(files, s3, "Stores files")
Rel(files, redis, Stores to and loads from cached data )
Rel(auth, rdb1, "Stores and loads and loads user data and sessions")
Rel(auth, redis, "Stores invalid token pairs")
Rel(films, edb, "Fetch data from")
Rel(films, redis, "Stores and loads from cached data")
Rel(files, rdb2, "Stores and loads files metas")
Rel(spa, proxy, "Uses", "JSON/HTTPS")
Rel(django, rdb3, "Stores and loads films, genres, persons")

@enduml
